TODO:
-Rewrite to Azure
--Figure out how xmlSAXHandler should be setup. I can use my own error functions, but get a segfault for some reason
--Memory testing
--Make simple functions (like set/get values from request/response/result) inline
--Implement translation support (modify URL creator, add additional fields/results/requests)
--Abstract all the "get int/long/string" code to dedicated functions instead of repeating them a bunch for request, response, result
--Add compression support
--Allow custom requests to have composite types (ignored initially do to lack of full error handling.)
--Make type system extendable
--Memory testing
-Document public function saftey info (thread safe, interrupt safe, etc.)
-Produce C++ version of library
--Generic for first version
--Add QString support
--Add signal/slot support

Note:
If the error code is ever PE_CURL_OK_CONTEXT_NOT_OK, it usually means 404.

Defines:
BING_DEBUG - Some debug output, optional search error returns. If search error returns are enabled then if an error occurs it will return an object 
	that has detailed error information.
BING_Qt - When bing_cpp.h is used, Qt support (such as QString) will be avaliable as well
BING_NO_MEM_HANDLERS - Don't use memory handlers. Stick with normal libc handlers for everything (malloc, calloc, realloc, free, strdup)
BING_IGNORE_CONNECTION_STATUS - Always return TRUE when checking for if a network connection is avaliable.